generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) // ID pengguna
  username  String    @unique // Nama pengguna (harus unik)
  password  String    // Kata sandi pengguna (sebaiknya terenkripsi)
  email     String    @unique // Email pengguna (harus unik)
  createdAt DateTime  @default(now()) // Tanggal dan waktu pembuatan akun
  updatedAt DateTime  @updatedAt // Tanggal dan waktu pembaruan akun terakhir
  uploads   MalwareFile[] @relation("UserUploads") // Relasi dengan file malware yang diupload
  logs      SystemLog[] // Relasi dengan log sistem yang mencatat aktivitas pengguna
}

model MalwareFile {
  id          Int       @id @default(autoincrement())
  name        String
  fileHash    String
  fileType    String
  fileSize    Int
  uploadedBy  Int       // ID dari pengguna yang mengupload
  uploadDate  DateTime  @default(now())
  malwareType MalwareType
  riskLevel   RiskLevel
  status      AnalysisStatus
  analysis    AnalysisResult?
  actions     FileAction[]

  user        User      @relation("UserUploads", fields: [uploadedBy], references: [id]) // Relasi balik ke User
}

enum MalwareType {
  Trojan
  Virus
  Ransomware
  Spyware
  Worm
}

enum RiskLevel {
  Low
  Medium
  High
  Critical
}

enum AnalysisStatus {
  Pending
  Analyzed
}

model AnalysisResult {
  id               Int       @id @default(autoincrement())
  malwareFile      MalwareFile @relation(fields: [malwareFileId], references: [id])
  malwareFileId    Int       @unique // Menambahkan @unique karena ini relasi satu-ke-satu
  analysisDate     DateTime  @default(now())
  analysisDetails  String
  detectedBehaviors String
  recommendations  String
  resultStatus     AnalysisStatus
  report           Report?

}

model SystemLog {
  id        Int       @id @default(autoincrement())
  userId    Int       // ID dari User yang membuat log
  action    String
  timestamp DateTime  @default(now())
  description String

  user      User      @relation(fields: [userId], references: [id]) // Relasi balik ke User
}

model MalwareTypeTable {
  id        Int       @id @default(autoincrement())
  typeName  String
}

model RiskLevelTable {
  id        Int       @id @default(autoincrement())
  levelName String
}

model FileAction {
  id          Int       @id @default(autoincrement())
  malwareFile MalwareFile @relation(fields: [malwareFileId], references: [id])
  malwareFileId Int
  actionType  FileActionType
  actionDate  DateTime  @default(now())
  reason      String
}

enum FileActionType {
  Delete
  Restore
}

model Report {
  id          Int       @id @default(autoincrement())
  analysisResult AnalysisResult @relation(fields: [analysisResultId], references: [id])
  analysisResultId Int       @unique // Menambahkan @unique karena ini relasi satu-ke-satu
  reportType  ReportType
  reportPath  String
}

enum ReportType {
  PDF
  CSV
}
